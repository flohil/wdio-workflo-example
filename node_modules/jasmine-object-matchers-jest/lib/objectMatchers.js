'use strict';

function assertObject(obj) {
  if (!(obj && typeof obj === 'object')) {
    throw new Error('object expected');
  }
}

function toContainKeys(object, keys) {
  var pass = true;
  var message = undefined;

  assertObject(object);

  if (!Array.isArray(keys)) {
    keys = Object.keys(keys);
  }

  keys.find(function (key) {
    if (!object.hasOwnProperty(key)) {
      message = 'Expected object to contain key:' + key;
      pass = false;

      return true;
    }
  });

  return { pass: pass, message: message };
}

function toContainValues(actualObject, expectedObject) {
  var pass = true;
  var message = undefined;

  assertObject(actualObject);
  assertObject(expectedObject);

  Object.keys(expectedObject).find(function (key) {
    if (actualObject[key] !== expectedObject[key]) {
      message = 'Expected object to contain "' + expectedObject[key] + '" at "' + key + '" but contained "' + actualObject[key] + '"';
      pass = false;

      return true;
    }
  });
  return { pass: pass, message: message };
}

module.exports = { toContainKeys: toContainKeys, toContainValues: toContainValues };